name: Deploy to AWS

run-name: Deploy to AWS

on:
  push:
    branches:
      - main
    paths:
      - user_data_script.sh

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: "ap-southeast-1"
  ASG_NAME: flask-asg1
  DOCKER_HUB_REPO: integrity11/blog_app_v2
  LAUNCH_TEMPLATE: flask-template
  TAG: ${{ github.sha }}


jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB  }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB }}/blog_app_v2:${{ github.sha }}

  deploy:
    name: Deploy 
    needs: build 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v3  

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
    
      - name: Update Auto Scaling Group with Launch Template
        run: |
          echo "---- BEGIN SCALING ---------"
          echo "ASG_NAME = "flask-asg1" "
          echo "DOCKER_HUB_REPO = "integrity11/my_blog_app" "
          echo "LAUNCH_TEMPLATE = "flask-template" "
          echo "TAG = "${{ github.sha }}" "
          GITHUB_SHA = ${{ github.sha }}
          sed "s/latest/$GITHUB_SHA/" user_data_script.sh > updated_user_data.sh
          encoded_userdata=$(base64 -w 0 updated_user_data_script.sh)
          # Create a new version of the Launch Template with the updated image
          NEW_LAUNCH_TEMPLATE_VERSION=$(aws ec2 create-launch-template-version \
            --launch-template-name flask-template \
            --launch-template-data "{\"UserData\": \"$encoded_userdata\"}" \
            --source-version 1 \
            --query "LaunchTemplateVersion.VersionNumber" --output text)

          # Update the ASG to use the new Launch Template version
          aws autoscaling update-auto-scaling-group \
            --auto-scaling-group-name flask-asg1 \
            --launch-template "LaunchTemplateName=flask-template,Version=$NEW_LAUNCH_TEMPLATE_VERSION"

           # Instance refresh 
          aws autoscaling start-instance-refresh \
            --auto-scaling-group-name flask-asg1 \
            --preferences "MinHealthyPercentage=50,InstanceWarmup=60" \
            --strategy "Rolling" \
            --desired-configuration "LaunchTemplate={LaunchTemplateName=flask-template,Version=$NEW_LAUNCH_TEMPLATE_VERSION}"


  


      